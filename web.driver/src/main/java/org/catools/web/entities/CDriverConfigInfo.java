package org.catools.web.entities;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;

/**
 * Configuration information for a web driver instance.
 * This class holds essential information about a browser window or tab,
 * including its URL, title, and window handler.
 * 
 * <p>The class uses Lombok annotations to automatically generate getters, setters,
 * equals, hashCode, toString methods, and supports method chaining through the
 * {@code @Accessors(chain = true)} annotation.</p>
 * 
 * <h3>Usage Examples:</h3>
 * 
 * <h4>Creating a new instance:</h4>
 * <pre>{@code
 * // Using no-args constructor
 * CDriverConfigInfo config = new CDriverConfigInfo();
 * 
 * // Using all-args constructor
 * CDriverConfigInfo config = new CDriverConfigInfo(
 *     "https://example.com", 
 *     "Example Page", 
 *     "window-handle-123"
 * );
 * 
 * // Using method chaining
 * CDriverConfigInfo config = new CDriverConfigInfo()
 *     .setUrl("https://google.com")
 *     .setTitle("Google")
 *     .setWindowHandler("main-window");
 * }</pre>
 * 
 * <h4>Accessing properties:</h4>
 * <pre>{@code
 * String currentUrl = config.getUrl();
 * String pageTitle = config.getTitle();
 * String windowId = config.getWindowHandler();
 * }</pre>
 * 
 * @author Generated by Lombok
 * @since 1.0
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@Accessors(chain = true)
public class CDriverConfigInfo {
  
  /**
   * The URL of the web page currently loaded in the browser window.
   * 
   * <p>This field stores the complete URL including protocol, domain, path, and query parameters.
   * It defaults to an empty string if not set.</p>
   * 
   * <h4>Examples:</h4>
   * <pre>{@code
   * config.setUrl("https://www.example.com/page?param=value");
   * config.setUrl("http://localhost:8080/app/dashboard");
   * config.setUrl("file:///path/to/local/file.html");
   * }</pre>
   * 
   * @return the current URL of the web page
   */
  private String url = "";
  
  /**
   * The title of the web page as displayed in the browser tab or window title bar.
   * 
   * <p>This field contains the content of the HTML {@code <title>} element.
   * It defaults to an empty string if not set or if the page has no title.</p>
   * 
   * <h4>Examples:</h4>
   * <pre>{@code
   * config.setTitle("Welcome to Example.com");
   * config.setTitle("Dashboard - My Application");
   * config.setTitle("Page Not Found - 404 Error");
   * }</pre>
   * 
   * @return the title of the web page
   */
  private String title = "";
  
  /**
   * The unique window handler identifier for the browser window or tab.
   * 
   * <p>This field stores the unique identifier assigned by the WebDriver to a specific
   * browser window or tab. This handler is used to switch between different windows
   * or tabs during automated testing. It defaults to an empty string if not set.</p>
   * 
   * <h4>Examples:</h4>
   * <pre>{@code
   * config.setWindowHandler("CDwindow-E4C1F2D3A5B6C789");
   * config.setWindowHandler("main-window");
   * config.setWindowHandler("popup-123456");
   * 
   * // Typically used with WebDriver operations:
   * driver.switchTo().window(config.getWindowHandler());
   * }</pre>
   * 
   * @return the window handler identifier
   */
  private String windowHandler = "";
}
